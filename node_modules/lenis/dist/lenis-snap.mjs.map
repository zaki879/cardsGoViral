{"version":3,"file":"lenis-snap.mjs","sources":["../src/element.ts","../src/uid.ts","../src/index.ts"],"sourcesContent":["function removeParentSticky(element: HTMLElement) {\r\n  const position = getComputedStyle(element).position\r\n\r\n  const isSticky = position === 'sticky'\r\n\r\n  if (isSticky) {\r\n    element.style.setProperty('position', 'static')\r\n    element.dataset.sticky = 'true'\r\n  }\r\n\r\n  if (element.offsetParent) {\r\n    removeParentSticky(element.offsetParent as HTMLElement)\r\n  }\r\n}\r\n\r\nfunction addParentSticky(element: HTMLElement) {\r\n  if (element?.dataset?.sticky === 'true') {\r\n    element.style.removeProperty('position')\r\n    delete element.dataset.sticky\r\n  }\r\n\r\n  if (element.offsetParent) {\r\n    addParentSticky(element.offsetParent as HTMLElement)\r\n  }\r\n}\r\n\r\nfunction offsetTop(element: HTMLElement, accumulator = 0) {\r\n  const top = accumulator + element.offsetTop\r\n  if (element.offsetParent) {\r\n    return offsetTop(element.offsetParent as HTMLElement, top)\r\n  }\r\n  return top\r\n}\r\n\r\nfunction offsetLeft(element: HTMLElement, accumulator = 0) {\r\n  const left = accumulator + element.offsetLeft\r\n  if (element.offsetParent) {\r\n    return offsetLeft(element.offsetParent as HTMLElement, left)\r\n  }\r\n  return left\r\n}\r\n\r\nfunction scrollTop(element: HTMLElement, accumulator = 0) {\r\n  const top = accumulator + element.scrollTop\r\n  if (element.offsetParent) {\r\n    return scrollTop(element.offsetParent as HTMLElement, top)\r\n  }\r\n  return top + window.scrollY\r\n}\r\n\r\nfunction scrollLeft(element: HTMLElement, accumulator = 0) {\r\n  const left = accumulator + element.scrollLeft\r\n  if (element.offsetParent) {\r\n    return scrollLeft(element.offsetParent as HTMLElement, left)\r\n  }\r\n  return left + window.scrollX\r\n}\r\n\r\nexport type SnapElementOptions = {\r\n  align?: string[]\r\n  ignoreSticky?: boolean\r\n  ignoreTransform?: boolean\r\n}\r\n\r\ntype Rect = {\r\n  top: number\r\n  left: number\r\n  width: number\r\n  height: number\r\n  x: number\r\n  y: number\r\n  bottom: number\r\n  right: number\r\n  element: HTMLElement\r\n}\r\n\r\nexport class SnapElement {\r\n  element: HTMLElement\r\n  options: SnapElementOptions\r\n  align: string[]\r\n  // @ts-ignore\r\n  rect: Rect = {}\r\n  wrapperResizeObserver: ResizeObserver\r\n  resizeObserver: ResizeObserver\r\n\r\n  constructor(\r\n    element: HTMLElement,\r\n    {\r\n      align = ['start'],\r\n      ignoreSticky = true,\r\n      ignoreTransform = false,\r\n    }: SnapElementOptions = {}\r\n  ) {\r\n    this.element = element\r\n\r\n    this.options = { align, ignoreSticky, ignoreTransform }\r\n\r\n    // this.ignoreSticky = ignoreSticky\r\n    // this.ignoreTransform = ignoreTransform\r\n\r\n    this.align = [align].flat()\r\n\r\n    // TODO: assing rect immediately\r\n\r\n    this.wrapperResizeObserver = new ResizeObserver(this.onWrapperResize)\r\n    this.wrapperResizeObserver.observe(document.body)\r\n    this.onWrapperResize()\r\n\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(this.element)\r\n    this.setRect({\r\n      width: this.element.offsetWidth,\r\n      height: this.element.offsetHeight,\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver.disconnect()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  setRect({\r\n    top,\r\n    left,\r\n    width,\r\n    height,\r\n    element,\r\n  }: {\r\n    top?: number\r\n    left?: number\r\n    width?: number\r\n    height?: number\r\n    element?: HTMLElement\r\n  } = {}) {\r\n    top = top ?? this.rect.top\r\n    left = left ?? this.rect.left\r\n    width = width ?? this.rect.width\r\n    height = height ?? this.rect.height\r\n    element = element ?? this.rect.element\r\n\r\n    if (\r\n      top === this.rect.top &&\r\n      left === this.rect.left &&\r\n      width === this.rect.width &&\r\n      height === this.rect.height &&\r\n      element === this.rect.element\r\n    )\r\n      return\r\n\r\n    this.rect.top = top\r\n    this.rect.y = top\r\n    this.rect.width = width\r\n    this.rect.height = height\r\n    this.rect.left = left\r\n    this.rect.x = left\r\n    this.rect.bottom = top + height\r\n    this.rect.right = left + width\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    let top, left\r\n\r\n    if (this.options.ignoreSticky) removeParentSticky(this.element)\r\n    if (this.options.ignoreTransform) {\r\n      top = offsetTop(this.element)\r\n      left = offsetLeft(this.element)\r\n    } else {\r\n      const rect = this.element.getBoundingClientRect()\r\n      top = rect.top + scrollTop(this.element)\r\n      left = rect.left + scrollLeft(this.element)\r\n    }\r\n    if (this.options.ignoreSticky) addParentSticky(this.element)\r\n\r\n    this.setRect({ top, left })\r\n  }\r\n\r\n  onResize = ([entry]: ResizeObserverEntry[]) => {\r\n    const width = entry.borderBoxSize[0].inlineSize\r\n    const height = entry.borderBoxSize[0].blockSize\r\n\r\n    this.setRect({ width, height })\r\n  }\r\n}\r\n","let index = 0\r\n\r\nexport type UID = number\r\n\r\nexport function uid(): UID {\r\n  return index++\r\n}\r\n","import Lenis from 'lenis'\r\nimport { SnapElement, SnapElementOptions } from './element'\r\nimport { UID, uid } from './uid'\r\n\r\n// TODO:\r\n// - horizontal\r\n// - fix trackpad snapping too soon due to velocity (fuck Apple)\r\n// - fix wheel scrolling after limits (see console scroll to)\r\n// - fix touch scroll, do not snap when not released\r\n// - arrow, spacebar\r\n\r\ntype Viewport = {\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport type SnapOptions = {\r\n  type?: 'mandatory' | 'proximity'\r\n  lerp?: number\r\n  easing?: (t: number) => number\r\n  duration?: number\r\n  velocityThreshold?: number\r\n  onSnapStart?: (t: number) => number\r\n  onSnapComplete?: (t: number) => number\r\n}\r\n\r\nexport default class Snap {\r\n  lenis: Lenis\r\n  options: SnapOptions\r\n  elements: Map<UID, SnapElement>\r\n  snaps: Map<UID, number>\r\n  viewport: Viewport\r\n  isStopped: Boolean = false\r\n\r\n  constructor(\r\n    lenis: Lenis,\r\n    {\r\n      type = 'mandatory',\r\n      lerp,\r\n      easing,\r\n      duration,\r\n      velocityThreshold = 1,\r\n      onSnapStart,\r\n      onSnapComplete,\r\n    }: SnapOptions = {}\r\n  ) {\r\n    this.lenis = lenis\r\n\r\n    this.options = {\r\n      type,\r\n      lerp,\r\n      easing,\r\n      duration,\r\n      velocityThreshold,\r\n      onSnapStart,\r\n      onSnapComplete,\r\n    }\r\n\r\n    this.elements = new Map()\r\n    this.snaps = new Map()\r\n\r\n    this.viewport = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    }\r\n    this.onWindowResize()\r\n    window.addEventListener('resize', this.onWindowResize)\r\n\r\n    this.lenis.on('scroll', this.onScroll)\r\n  }\r\n\r\n  // debug() {\r\n  //   const element = document.createElement('div')\r\n  //   element.style.cssText = `\r\n  //     position: fixed;\r\n  //     background: red;\r\n  //     border-bottom: 1px solid red;\r\n  //     left: 0;\r\n  //     right: 0;\r\n  //     top: 0;\r\n  //     z-index: 9999;\r\n  //   `\r\n  //   document.body.appendChild(element)\r\n  // }\r\n\r\n  destroy() {\r\n    this.lenis.off('scroll', this.onScroll)\r\n    window.removeEventListener('resize', this.onWindowResize)\r\n    this.elements.forEach((element) => element.destroy())\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n  }\r\n\r\n  add(value: number) {\r\n    const id = uid()\r\n\r\n    this.snaps.set(id, value)\r\n\r\n    return () => this.remove(id)\r\n  }\r\n\r\n  remove(id: UID) {\r\n    this.snaps.delete(id)\r\n  }\r\n\r\n  addElement(element: HTMLElement, options = {} as SnapElementOptions) {\r\n    const id = uid()\r\n\r\n    this.elements.set(id, new SnapElement(element, options))\r\n\r\n    return () => this.removeElement(id)\r\n  }\r\n\r\n  removeElement(id: UID) {\r\n    this.elements.delete(id)\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.viewport.width = window.innerWidth\r\n    this.viewport.height = window.innerHeight\r\n  }\r\n\r\n  onScroll = ({\r\n    scroll,\r\n    limit,\r\n    lastVelocity,\r\n    velocity,\r\n    isScrolling,\r\n    userData,\r\n    isHorizontal,\r\n  }) => {\r\n    if (this.isStopped) return\r\n    // console.log(scroll, velocity, type)\r\n\r\n    // return\r\n    const isDecelerating = Math.abs(lastVelocity) > Math.abs(velocity)\r\n    const isTurningBack =\r\n      Math.sign(lastVelocity) !== Math.sign(velocity) && velocity !== 0\r\n\r\n    // console.log({ lastVelocity, velocity, isTurningBack, isDecelerating })\r\n\r\n    // console.log('onScroll')\r\n\r\n    if (\r\n      Math.abs(velocity) < this.options.velocityThreshold &&\r\n      // !isTouching &&\r\n      isDecelerating &&\r\n      !isTurningBack &&\r\n      userData?.initiator !== 'snap'\r\n    ) {\r\n      scroll = Math.ceil(scroll)\r\n\r\n      let snaps = [0, ...this.snaps.values(), limit] as number[]\r\n\r\n      this.elements.forEach(({ rect, align }) => {\r\n        let snap: number | undefined\r\n\r\n        align.forEach((align) => {\r\n          if (align === 'start') {\r\n            snap = rect.top\r\n          } else if (align === 'center') {\r\n            snap = isHorizontal\r\n              ? rect.left + rect.width / 2 - this.viewport.width / 2\r\n              : rect.top + rect.height / 2 - this.viewport.height / 2\r\n          } else if (align === 'end') {\r\n            snap = isHorizontal\r\n              ? rect.left + rect.width - this.viewport.width\r\n              : rect.top + rect.height - this.viewport.height\r\n          }\r\n\r\n          if (snap !== undefined) {\r\n            snaps.push(Math.ceil(snap))\r\n          }\r\n        })\r\n      })\r\n\r\n      snaps = snaps.sort((a, b) => Math.abs(a) - Math.abs(b))\r\n\r\n      let prevSnap = snaps.findLast((snap) => snap <= scroll)\r\n      if (prevSnap === undefined) prevSnap = snaps[0]\r\n      const distanceToPrevSnap = Math.abs(scroll - prevSnap)\r\n\r\n      let nextSnap = snaps.find((snap) => snap >= scroll)\r\n      if (nextSnap === undefined) nextSnap = snaps[snaps.length - 1]\r\n      const distanceToNextSnap = Math.abs(scroll - nextSnap)\r\n\r\n      const snap = distanceToPrevSnap < distanceToNextSnap ? prevSnap : nextSnap\r\n\r\n      const distance = Math.abs(scroll - snap)\r\n\r\n      if (\r\n        this.options.type === 'mandatory' ||\r\n        (this.options.type === 'proximity' && distance <= this.viewport.height)\r\n      ) {\r\n        // this.__isScrolling = true\r\n        // this.onSnapStart?.(snap)\r\n\r\n        // console.log('scroll to')\r\n\r\n        this.lenis.scrollTo(snap, {\r\n          lerp: this.options.lerp,\r\n          easing: this.options.easing,\r\n          duration: this.options.duration,\r\n          userData: { initiator: 'snap' },\r\n          onStart: () => {\r\n            this.options.onSnapStart?.(snap)\r\n          },\r\n          onComplete: () => {\r\n            this.options.onSnapComplete?.(snap)\r\n          },\r\n        })\r\n      }\r\n\r\n      // console.timeEnd('scroll')\r\n    }\r\n  }\r\n}\r\n"],"names":["removeParentSticky","element","getComputedStyle","position","style","setProperty","dataset","sticky","offsetParent","addParentSticky","_a","removeProperty","offsetTop","accumulator","top","offsetLeft","left","scrollTop","window","scrollY","scrollLeft","scrollX","SnapElement","constructor","align","ignoreSticky","ignoreTransform","this","rect","onWrapperResize","options","getBoundingClientRect","setRect","onResize","entry","width","borderBoxSize","inlineSize","height","blockSize","flat","wrapperResizeObserver","ResizeObserver","observe","document","body","resizeObserver","offsetWidth","offsetHeight","destroy","disconnect","y","x","bottom","right","index","uid","Snap","lenis","type","lerp","easing","duration","velocityThreshold","onSnapStart","onSnapComplete","isStopped","onWindowResize","viewport","innerWidth","innerHeight","onScroll","scroll","limit","lastVelocity","velocity","isScrolling","userData","isHorizontal","isDecelerating","Math","abs","isTurningBack","sign","initiator","ceil","snaps","values","elements","forEach","snap","undefined","push","sort","a","b","prevSnap","findLast","distanceToPrevSnap","nextSnap","find","length","distance","scrollTo","onStart","_b","call","onComplete","Map","addEventListener","on","off","removeEventListener","start","stop","add","value","id","set","remove","delete","addElement","removeElement"],"mappings":"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"}